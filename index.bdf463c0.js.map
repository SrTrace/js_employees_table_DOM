{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,E,I,A,W,M,A,U,wI,G,C,S,E,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,CCIA,IAyNQ,EA7EA,EAsBA,EAjIA,EAEA,EAEA,EArCF,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAa,SAAS,gBAAgB,CAAC,YACvC,EAAY,SAAS,gBAAgB,CAAC,YAEtC,EAAiB,MAAM,EAAW,MAAM,EAAE,IAAI,CAAC,IA4FrD,SAAS,EAAiB,CAAM,CAAE,CAAQ,CAAE,CAAK,CAAE,CAAW,CAAE,CAAI,EAClE,IAAM,EAAe,SAAS,aAAa,CAAC,OAE5C,EAAa,SAAS,CAAC,GAAG,CAAC,eAAgB,GAC3C,EAAa,YAAY,CAAC,UAAW,gBAErC,EAAa,SAAS,CAAI,6BAEnB,MAAA,CADiB,EAAM,kBACX,MAAA,CAAZ,EAAY,YAGnB,EAAa,KAAK,CAAC,GAAG,CAAG,GAAU,MAAA,CAAP,EAAO,MACnC,EAAa,KAAK,CAAC,KAAK,CAAG,GAAY,MAAA,CAAT,EAAS,MACvC,SAAS,IAAI,CAAC,MAAM,CAAC,GAErB,WAAW,WACT,EAAa,MAAM,EACrB,EAAG,IACL,CAoKA,SAAS,EAAY,CAAG,EAEtB,IAAM,EAAS,OADI,EAAI,OAAO,CAAC,KAAM,IAAI,KAAK,CAAC,IAG/C,OAAO,MAAM,GAAU,EAAI,CAC7B,CAhEE,CAFM,EAAO,SAAS,aAAa,CAAC,SAE/B,SAAS,CAAC,GAAG,CAAC,qBA1Lb,EA4LC,EAjFD,EAAiB,SAAS,sBAAsB,GAEtD,EAAW,OAAO,CAAC,SAAC,CAAA,CAAM,CAA1B,EACE,IAAM,GAiEW,EAjES,EAAK,SAAS,CAoE1C,CAFM,EAAQ,S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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\"table\");\nvar tableHeads = document.querySelectorAll(\"thead th\");\nvar tableRows = document.querySelectorAll(\"tbody tr\");\n// for asc order sortDirections is 1, otherwise will be -1\nvar sortDirections = Array(tableHeads.length).fill(-1);\naddFormToPage();\ntableHeads.forEach(function(head, index) {\n    head.addEventListener(\"click\", function(e) {\n        var sortValue = head.textContent;\n        sortDirections[index] = setSortDirection(index);\n        sortTable(sortValue, index, sortDirections[index]);\n    });\n});\ntable.tBodies[0].addEventListener(\"click\", function(e) {\n    if (e.target && e.target.nodeName === \"TD\") {\n        var row = e.target.parentElement;\n        var rows = table.tBodies[0].getElementsByTagName(\"tr\");\n        var prevActiveRowIndex = _to_consumable_array(rows).findIndex(function(r) {\n            return r.classList.contains(\"active\");\n        });\n        if (prevActiveRowIndex !== -1) rows[prevActiveRowIndex].classList.remove(\"active\");\n        row.classList.add(\"active\");\n    }\n});\nfunction addFormToPage() {\n    var form = createForm();\n    var inputsFragment = createInputsFragment();\n    var submitBtn = createButton(\"Save to table\");\n    form.appendChild(inputsFragment);\n    form.appendChild(submitBtn);\n    // form.addEventListener('submit', (e) => {\n    submitBtn.addEventListener(\"click\", function(e) {\n        e.preventDefault();\n        if (isFormDataValid(form)) {\n            insertDataToTable(form);\n            showNotification(10, 10, \"Success\", \"New employee is successfully added to the table!\", \"success\");\n            form.reset();\n        }\n    });\n    document.body.appendChild(form);\n}\nfunction isFormDataValid(formData) {\n    var data = new FormData(formData);\n    var isValid = true;\n    var message = \"\";\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var _step_value = _sliced_to_array(_step.value, 2), inputName = _step_value[0], value = _step_value[1];\n            if (inputName === \"name\" && value.length < 4) {\n                message = \"Name should have more then 3 letters\";\n                isValid = false;\n            }\n            if (inputName === \"age\" && (+value < 18 || +value > 90)) {\n                if (message.length > 0) message = message + \", \" + \"not properly age!\";\n                else message = \"Not properly age!\";\n                isValid = false;\n            }\n            if (!value.length || value.trim() === \"\") {\n                message = \"Empty field not valid!\";\n                isValid = false;\n            }\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    if (!isValid) showNotification(10, 10, \"Error\", message, \"error\");\n    return isValid;\n}\nfunction showNotification(posTop, posRight, title, description, type) {\n    var notification = document.createElement(\"div\");\n    notification.classList.add(\"notification\", type);\n    notification.setAttribute(\"data-qa\", \"notification\");\n    notification.innerHTML = \"\\n    <h2 class = 'title'>\".concat(title, \"</h2>\\n    <p>\").concat(description, \"</p>\\n  \");\n    notification.style.top = \"\".concat(posTop, \"px\");\n    notification.style.right = \"\".concat(posRight, \"px\");\n    document.body.append(notification);\n    setTimeout(function() {\n        notification.remove();\n    }, 2000);\n}\n// #region creating Form\nfunction insertDataToTable(form) {\n    var formData = new FormData(form);\n    var newRow = document.createElement(\"tr\");\n    var numberFormatter = new Intl.NumberFormat(\"en-US\");\n    tableHeads.forEach(function(head) {\n        var inputName = head.textContent.toLowerCase();\n        var newCell = document.createElement(\"td\");\n        var cellValue = formData.get(inputName);\n        if (inputName === \"salary\") cellValue = \"$\".concat(numberFormatter.format(cellValue));\n        newCell.textContent = cellValue;\n        newRow.appendChild(newCell);\n    });\n    table.tBodies[0].appendChild(newRow);\n}\nfunction createInputsFragment() {\n    var inputsFragment = document.createDocumentFragment();\n    tableHeads.forEach(function(head, i) {\n        var label = createLabel(head.innerText);\n        var inputName = head.innerText.toLowerCase();\n        if (inputName === \"office\") {\n            var select = createSelect(inputName, i);\n            label.appendChild(select);\n        } else {\n            var input = createInput(inputName);\n            label.appendChild(input);\n        }\n        inputsFragment.appendChild(label);\n    });\n    return inputsFragment;\n}\nfunction createButton(text) {\n    var submitBtn = document.createElement(\"button\");\n    submitBtn.innerText = \"\".concat(text);\n    return submitBtn;\n}\nfunction createInput(inputName) {\n    var input = document.createElement(\"input\");\n    input.setAttribute(\"name\", inputName);\n    input.setAttribute(\"data-qa\", inputName);\n    input.setAttribute(\"required\", true);\n    if (inputName === \"salary\" || inputName === \"age\") input.setAttribute(\"type\", \"number\");\n    return input;\n}\nfunction createSelect(inputName, columnIndex) {\n    var select = document.createElement(\"select\");\n    select.setAttribute(\"name\", inputName);\n    select.setAttribute(\"data-qa\", inputName);\n    select.setAttribute(\"required\", true);\n    var optionValues = getUniqueValuesFromTableColumn(columnIndex);\n    optionValues.forEach(function(value, index) {\n        var option = document.createElement(\"option\");\n        option.setAttribute(\"value\", value);\n        option.textContent = value;\n        if (index === 0) option.setAttribute(\"selected\", true);\n        select.appendChild(option);\n    });\n    return select;\n}\nfunction createLabel(text) {\n    var label = document.createElement(\"label\");\n    label.innerHTML = \"\".concat(text, \": \");\n    return label;\n}\nfunction createForm() {\n    var form = document.createElement(\"form\");\n    form.classList.add(\"new-employee-form\");\n    return form;\n}\nfunction getUniqueValuesFromTableColumn(columnIndex) {\n    var columnData = _to_consumable_array(tableRows).map(function(row) {\n        return row.cells[columnIndex].textContent;\n    });\n    var uniqueData = _to_consumable_array(new Set(columnData));\n    return uniqueData;\n}\n// #endregion\n// #region sorting by clicking\nfunction setSortDirection(index) {\n    for(var i = 0; i < sortDirections.length; i++)if (i !== index) sortDirections[i] = -1;\n    else sortDirections[i] *= -1;\n    return sortDirections[index];\n}\nfunction sortTable(sortValue, columnIndex, sortDirection) {\n    var rows = _to_consumable_array(table.tBodies[0].children);\n    rows.sort(function(a, b) {\n        return sortBy(a, b, sortValue, columnIndex, sortDirection);\n    });\n    var sortedFragment = document.createDocumentFragment();\n    rows.forEach(function(row) {\n        return sortedFragment.appendChild(row);\n    });\n    table.tBodies[0].appendChild(sortedFragment);\n}\nfunction sortBy(a, b, sortValue, columnIndex, sortDirection) {\n    var cellA = a.cells[columnIndex].innerText;\n    var cellB = b.cells[columnIndex].innerText;\n    switch(sortValue){\n        case \"Name\":\n        case \"Position\":\n        case \"Office\":\n            return cellA.localeCompare(cellB) * sortDirection;\n        case \"Age\":\n            return (+cellA - +cellB) * sortDirection;\n        case \"Salary\":\n            return (parseNumber(cellA) - parseNumber(cellB)) * sortDirection;\n        default:\n            return 0;\n    }\n}\nfunction parseNumber(str) {\n    var strNumbers = str.replace(/,/g, \"\").slice(1);\n    var number = Number(strNumbers);\n    return isNaN(number) ? 0 : number;\n} // #endregion\n\n//# sourceMappingURL=index.bdf463c0.js.map\n","'use strict';\n\n'use strict';\n\nconst table = document.querySelector('table');\nconst tableHeads = document.querySelectorAll('thead th');\nconst tableRows = document.querySelectorAll('tbody tr');\n// for asc order sortDirections is 1, otherwise will be -1\nconst sortDirections = Array(tableHeads.length).fill(-1);\n\naddFormToPage();\n\ntableHeads.forEach((head, index) => {\n  head.addEventListener('click', (e) => {\n    const sortValue = head.textContent;\n\n    sortDirections[index] = setSortDirection(index);\n    sortTable(sortValue, index, sortDirections[index]);\n  });\n});\n\ntable.tBodies[0].addEventListener('click', (e) => {\n  if (e.target && e.target.nodeName === 'TD') {\n    const row = e.target.parentElement;\n    const rows = table.tBodies[0].getElementsByTagName('tr');\n    const prevActiveRowIndex = [...rows].findIndex((r) => {\n      return r.classList.contains('active');\n    });\n\n    if (prevActiveRowIndex !== -1) {\n      rows[prevActiveRowIndex].classList.remove('active');\n    }\n    row.classList.add('active');\n  }\n});\n\nfunction addFormToPage() {\n  const form = createForm();\n\n  const inputsFragment = createInputsFragment();\n\n  const submitBtn = createButton('Save to table');\n\n  form.appendChild(inputsFragment);\n  form.appendChild(submitBtn);\n\n  // form.addEventListener('submit', (e) => {\n  submitBtn.addEventListener('click', (e) => {\n    e.preventDefault();\n\n    if (isFormDataValid(form)) {\n      insertDataToTable(form);\n\n      showNotification(\n        10,\n        10,\n        'Success',\n        'New employee is successfully added to the table!',\n        'success',\n      );\n      form.reset();\n    }\n  });\n\n  document.body.appendChild(form);\n}\n\nfunction isFormDataValid(formData) {\n  const data = new FormData(formData);\n  let isValid = true;\n  let message = '';\n\n  for (const [inputName, value] of data) {\n    if (inputName === 'name' && value.length < 4) {\n      message = 'Name should have more then 3 letters';\n      isValid = false;\n    }\n\n    if (inputName === 'age' && (+value < 18 || +value > 90)) {\n      if (message.length > 0) {\n        message = message + ', ' + 'not properly age!';\n      } else {\n        message = 'Not properly age!';\n      }\n      isValid = false;\n    }\n\n    if (!value.length || value.trim() === '') {\n      message = 'Empty field not valid!';\n      isValid = false;\n    }\n  }\n\n  if (!isValid) {\n    showNotification(10, 10, 'Error', message, 'error');\n  }\n\n  return isValid;\n}\n\nfunction showNotification(posTop, posRight, title, description, type) {\n  const notification = document.createElement('div');\n\n  notification.classList.add('notification', type);\n  notification.setAttribute('data-qa', 'notification');\n\n  notification.innerHTML = `\n    <h2 class = 'title'>${title}</h2>\n    <p>${description}</p>\n  `;\n\n  notification.style.top = `${posTop}px`;\n  notification.style.right = `${posRight}px`;\n  document.body.append(notification);\n\n  setTimeout(() => {\n    notification.remove();\n  }, 2000);\n}\n\n// #region creating Form\n\nfunction insertDataToTable(form) {\n  const formData = new FormData(form);\n  const newRow = document.createElement('tr');\n  const numberFormatter = new Intl.NumberFormat('en-US');\n\n  tableHeads.forEach((head) => {\n    const inputName = head.textContent.toLowerCase();\n    const newCell = document.createElement('td');\n    let cellValue = formData.get(inputName);\n\n    if (inputName === 'salary') {\n      cellValue = `$${numberFormatter.format(cellValue)}`;\n    }\n\n    newCell.textContent = cellValue;\n    newRow.appendChild(newCell);\n  });\n\n  table.tBodies[0].appendChild(newRow);\n}\n\nfunction createInputsFragment() {\n  const inputsFragment = document.createDocumentFragment();\n\n  tableHeads.forEach((head, i) => {\n    const label = createLabel(head.innerText);\n    const inputName = head.innerText.toLowerCase();\n\n    if (inputName === 'office') {\n      const select = createSelect(inputName, i);\n\n      label.appendChild(select);\n    } else {\n      const input = createInput(inputName);\n\n      label.appendChild(input);\n    }\n    inputsFragment.appendChild(label);\n  });\n\n  return inputsFragment;\n}\n\nfunction createButton(text) {\n  const submitBtn = document.createElement('button');\n\n  submitBtn.innerText = `${text}`;\n\n  return submitBtn;\n}\n\nfunction createInput(inputName) {\n  const input = document.createElement('input');\n\n  input.setAttribute('name', inputName);\n  input.setAttribute('data-qa', inputName);\n  input.setAttribute('required', true);\n\n  if (inputName === 'salary' || inputName === 'age') {\n    input.setAttribute('type', 'number');\n  }\n\n  return input;\n}\n\nfunction createSelect(inputName, columnIndex) {\n  const select = document.createElement('select');\n\n  select.setAttribute('name', inputName);\n  select.setAttribute('data-qa', inputName);\n  select.setAttribute('required', true);\n\n  const optionValues = getUniqueValuesFromTableColumn(columnIndex);\n\n  optionValues.forEach((value, index) => {\n    const option = document.createElement('option');\n\n    option.setAttribute('value', value);\n    option.textContent = value;\n\n    if (index === 0) {\n      option.setAttribute('selected', true);\n    }\n\n    select.appendChild(option);\n  });\n\n  return select;\n}\n\nfunction createLabel(text) {\n  const label = document.createElement('label');\n\n  label.innerHTML = `${text}: `;\n\n  return label;\n}\n\nfunction createForm() {\n  const form = document.createElement('form');\n\n  form.classList.add('new-employee-form');\n\n  return form;\n}\n\nfunction getUniqueValuesFromTableColumn(columnIndex) {\n  const columnData = [...tableRows].map(\n    (row) => row.cells[columnIndex].textContent,\n  );\n\n  const uniqueData = [...new Set(columnData)];\n\n  return uniqueData;\n}\n\n// #endregion\n\n// #region sorting by clicking\nfunction setSortDirection(index) {\n  for (let i = 0; i < sortDirections.length; i++) {\n    if (i !== index) {\n      sortDirections[i] = -1;\n    } else {\n      sortDirections[i] *= -1;\n    }\n  }\n\n  return sortDirections[index];\n}\n\nfunction sortTable(sortValue, columnIndex, sortDirection) {\n  const rows = [...table.tBodies[0].children];\n\n  rows.sort((a, b) => sortBy(a, b, sortValue, columnIndex, sortDirection));\n\n  const sortedFragment = document.createDocumentFragment();\n\n  rows.forEach((row) => sortedFragment.appendChild(row));\n  table.tBodies[0].appendChild(sortedFragment);\n}\n\nfunction sortBy(a, b, sortValue, columnIndex, sortDirection) {\n  const cellA = a.cells[columnIndex].innerText;\n  const cellB = b.cells[columnIndex].innerText;\n\n  switch (sortValue) {\n    case 'Name':\n    case 'Position':\n    case 'Office':\n      return cellA.localeCompare(cellB) * sortDirection;\n    case 'Age':\n      return (+cellA - +cellB) * sortDirection;\n    case 'Salary':\n      return (parseNumber(cellA) - parseNumber(cellB)) * sortDirection;\n    default:\n      return 0;\n  }\n}\n\nfunction parseNumber(str) {\n  const strNumbers = str.replace(/,/g, '').slice(1);\n  const number = Number(strNumbers);\n\n  return isNaN(number) ? 0 : number;\n}\n\n// #endregion\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","_non_iterable_spread","TypeError","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","form","inputsFragment","submitBtn","table","document","querySelector","tableHeads","querySelectorAll","tableRows","sortDirections","fill","showNotification","posTop","posRight","title","description","type","notification","createElement","classList","add","setAttribute","innerHTML","concat","style","top","right","body","append","setTimeout","remove","parseNumber","str","number","Number","replace","isNaN","createDocumentFragment","forEach","head","label","text","innerText","inputName","toLowerCase","select","columnData","optionValues","map","row","cells","textContent","Set","value","index","option","appendChild","input","addEventListener","e","formData","newRow","numberFormatter","preventDefault","isFormDataValid","data","FormData","isValid","message","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","_step_value","_array_with_holes","_iterable_to_array_limit","_s","_e","_i","_arr","_n","_d","push","err","_non_iterable_rest","trim","return","Intl","NumberFormat","newCell","cellValue","get","format","tBodies","reset","sortDirection","rows","sortedFragment","sortValue","setSortDirection","children","sort","a","b","sortBy","columnIndex","cellA","cellB","localeCompare","target","nodeName","parentElement","getElementsByTagName","prevActiveRowIndex","findIndex","r","contains"],"version":3,"file":"index.bdf463c0.js.map"}